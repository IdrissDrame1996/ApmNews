{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _hooks = require(\"../../../hooks\");\nvar _Stack = require(\"../../primitives/Stack\");\nvar _Skeleton = _interopRequireDefault(require(\"./Skeleton\"));\nvar _excluded = [\"children\", \"startColor\", \"endColor\", \"lines\", \"isLoaded\", \"_line\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar SkeletonText = function SkeletonText(props, ref) {\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('SkeletonText', props),\n    children = _usePropsResolution.children,\n    startColor = _usePropsResolution.startColor,\n    endColor = _usePropsResolution.endColor,\n    lines = _usePropsResolution.lines,\n    isLoaded = _usePropsResolution.isLoaded,\n    _line = _usePropsResolution._line,\n    resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, _excluded);\n  var computedChildren = [];\n  for (var i = 0; i < lines; i++) {\n    if (i === lines - 1 && lines !== 1) {\n      computedChildren.push(_react.default.createElement(_Skeleton.default, _extends({\n        key: i,\n        endColor: endColor,\n        startColor: startColor,\n        w: \"75%\"\n      }, _line)));\n    } else computedChildren.push(_react.default.createElement(_Skeleton.default, _extends({\n      key: i,\n      endColor: endColor,\n      startColor: startColor\n    }, _line)));\n  }\n  return isLoaded ? children : _react.default.createElement(_Stack.Stack, _extends({}, resolvedProps, {\n    ref: ref\n  }), computedChildren);\n};\nvar _default = (0, _react.memo)((0, _react.forwardRef)(SkeletonText));\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_hooks","_Stack","_Skeleton","_interopRequireDefault","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","SkeletonText","props","ref","_usePropsResolution","usePropsResolution","children","startColor","endColor","lines","isLoaded","_line","resolvedProps","_objectWithoutProperties2","computedChildren","i","push","React","createElement","Skeleton","_extends","w","Stack","_default","memo","forwardRef","exports"],"sources":["C:\\Users\\idriss.drame\\Projet\\ApmNews\\node_modules\\native-base\\lib\\module\\components\\composites\\Skeleton\\SkeletonText.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { Stack } from '../../primitives/Stack';\nimport Skeleton from './Skeleton';\nimport type { ISkeletonTextProps } from './types';\n\nconst SkeletonText = (\n  //@ts-ignore\n  props: ISkeletonTextProps,\n  ref: any\n) => {\n  // const { children, ...props } = allProps;\n  const {\n    children,\n    startColor,\n    endColor,\n    lines,\n    isLoaded,\n    _line,\n    ...resolvedProps\n  } = usePropsResolution('SkeletonText', props);\n\n  const computedChildren = [];\n  //generating an array of skeleton components (same length as noOfLines)\n  for (let i = 0; i < lines; i++) {\n    //check for last line (to change the width of last line)\n    if (i === lines - 1 && lines !== 1) {\n      computedChildren.push(\n        //Using Skeleton component with required props\n        <Skeleton\n          key={i}\n          endColor={endColor}\n          startColor={startColor}\n          w=\"75%\"\n          {..._line}\n        />\n      );\n    } else\n      computedChildren.push(\n        <Skeleton\n          key={i}\n          endColor={endColor}\n          startColor={startColor}\n          {..._line}\n        />\n      );\n  }\n  return isLoaded ? (\n    children\n  ) : (\n    <Stack {...resolvedProps} ref={ref}>\n      {computedChildren}\n    </Stack>\n  );\n};\n\nexport default memo(forwardRef(SkeletonText));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
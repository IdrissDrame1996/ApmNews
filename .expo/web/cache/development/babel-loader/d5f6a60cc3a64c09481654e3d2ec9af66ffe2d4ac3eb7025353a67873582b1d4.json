{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = _interopRequireDefault(require(\"react-native\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\idriss.drame\\\\Projet\\\\ApmNews\\\\node_modules\\\\react-native-spinkit\\\\index.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar NativeModules = _reactNative.default.NativeModules,\n  processColor = _reactNative.default.processColor,\n  requireNativeComponent = _reactNative.default.requireNativeComponent,\n  View = _reactNative.default.View;\nvar RNSpinkit = null;\nvar Spinkit = function (_React$Component) {\n  (0, _inherits2.default)(Spinkit, _React$Component);\n  var _super = _createSuper(Spinkit);\n  function Spinkit() {\n    (0, _classCallCheck2.default)(this, Spinkit);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(Spinkit, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.isVisible) return (0, _jsxRuntime.jsx)(View, {});\n      var size = {\n        height: this.props.size,\n        width: this.props.size\n      };\n      var colorNumber = processColor(this.props.color);\n      return (0, _jsxRuntime.jsx)(RNSpinkit, {\n        type: String(this.props.type),\n        size: parseInt(this.props.size),\n        color: colorNumber,\n        style: [size, this.props.style]\n      });\n    }\n  }]);\n  return Spinkit;\n}(_react.default.Component);\nSpinkit.propTypes = {\n  type: _propTypes.default.string,\n  color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  size: _propTypes.default.number,\n  isVisible: _propTypes.default.bool,\n  testID: _propTypes.default.string,\n  accessibilityComponentType: _propTypes.default.string,\n  accessibilityLabel: _propTypes.default.string,\n  accessibilityLiveRegion: _propTypes.default.string,\n  renderToHardwareTextureAndroid: _propTypes.default.bool,\n  importantForAccessibility: _propTypes.default.string,\n  onLayout: _propTypes.default.func,\n  style: _propTypes.default.object\n};\nSpinkit.defaultProps = {\n  size: 37,\n  color: \"#000000\",\n  isVisible: true\n};\nNativeModules.RNSpinkit;\nRNSpinkit = requireNativeComponent('RNSpinkit', Spinkit, {\n  nativeOnly: {\n    'nativeID': true\n  }\n});\nmodule.exports = Spinkit;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_propTypes","_jsxRuntime","_jsxFileName","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","NativeModules","ReactNative","processColor","requireNativeComponent","View","RNSpinkit","Spinkit","_React$Component","_inherits2","_super","_classCallCheck2","_createClass2","key","value","render","props","isVisible","jsx","size","height","width","colorNumber","color","type","String","parseInt","style","React","Component","propTypes","PropTypes","string","oneOfType","number","bool","testID","accessibilityComponentType","accessibilityLabel","accessibilityLiveRegion","renderToHardwareTextureAndroid","importantForAccessibility","onLayout","func","object","defaultProps","nativeOnly","module","exports"],"sources":["C:/Users/idriss.drame/Projet/ApmNews/node_modules/react-native-spinkit/index.js"],"sourcesContent":["import React from 'react'\nimport ReactNative from 'react-native'\nimport PropTypes from 'prop-types';\n\nvar {\n\tNativeModules,\n\tprocessColor,\n\trequireNativeComponent,\n\tView\n} = ReactNative;\n\nvar RNSpinkit = null;\n\nclass Spinkit extends React.Component {\n\n\tstatic propTypes = {\n\t\ttype: PropTypes.string,\n\t\t/**\n\t\t * @prop color\n\t\t * @NOTE This is typically passed as a string, but technically can also be\n\t\t *\ta number (see https://facebook.github.io/react/docs/typechecking-with-proptypes.html).\n\t\t *\tIn addition, allowing a number prop type eliminates the PropType warning\n\t\t *\tReact Native will throw if passing a string into this component but a\n\t\t *\tdifferent type (number) down to the native module.\n\t\t */\n\t\tcolor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\tsize: PropTypes.number,\n\t\tisVisible: PropTypes.bool,\n\t\ttestID: PropTypes.string,\n\t\taccessibilityComponentType: PropTypes.string,\n\t\taccessibilityLabel: PropTypes.string,\n\t\taccessibilityLiveRegion: PropTypes.string,\n\t\trenderToHardwareTextureAndroid: PropTypes.bool,\n\t\timportantForAccessibility: PropTypes.string,\n\t\tonLayout: PropTypes.func,\n\t\tstyle: PropTypes.object,\n\t};\n\n\tstatic defaultProps = {\n\t\tsize: 37,\n\t\tcolor: \"#000000\",\n\t\tisVisible: true\n\t};\n\n\trender() {\n\t\tif (!this.props.isVisible) return <View/>;\n\n\t\tvar size = {height: this.props.size, width: this.props.size};\n\n\t\t// In order to handle all the color specifications allowed in React Native\n\t\t// as a whole, we need to call processColor here, and can pass in the\n\t\t// resulting number directly. RCTConvert will be called on iOS to parse\n\t\t// into #AARRGGBB form; on Android, this int can be used directly for\n\t\t// setting the color.\n\t\tvar colorNumber = processColor(this.props.color);\n\n\t\treturn (\n\t\t\t<RNSpinkit\n\t\t\t\ttype={String(this.props.type)}\n\t\t\t\tsize={parseInt(this.props.size)}\n\t\t\t\tcolor={colorNumber}\n\t\t\t\tstyle={[size, this.props.style]}/>\n\t\t);\n\t}\n\n}\n\n// Since RNPM does not recognize `requireNativeComponent`, so we have to\n// add this line, and RNPM will link native modules automatically\nNativeModules.RNSpinkit;\n\n// Native component\nRNSpinkit = requireNativeComponent(\n\t'RNSpinkit',\n\tSpinkit,\n    {\n        nativeOnly: {\n            'nativeID': true\n        }\n    }\n);\n\n\nmodule.exports = Spinkit;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
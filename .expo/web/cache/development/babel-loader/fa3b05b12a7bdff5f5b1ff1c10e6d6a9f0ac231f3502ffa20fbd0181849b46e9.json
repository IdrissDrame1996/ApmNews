{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  attachEventHandlersOnRef: true,\n  getLabel: true,\n  isRTL: true,\n  useId: true,\n  useLayoutEffect: true,\n  mergeIds: true,\n  mergeProps: true,\n  SSRProvider: true,\n  useIsSSR: true\n};\nObject.defineProperty(exports, \"SSRProvider\", {\n  enumerable: true,\n  get: function get() {\n    return _ssr.SSRProvider;\n  }\n});\nexports.isRTL = exports.getLabel = exports.attachEventHandlersOnRef = void 0;\nObject.defineProperty(exports, \"mergeIds\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.mergeIds;\n  }\n});\nObject.defineProperty(exports, \"mergeProps\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.mergeProps;\n  }\n});\nObject.defineProperty(exports, \"useId\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.useId;\n  }\n});\nObject.defineProperty(exports, \"useIsSSR\", {\n  enumerable: true,\n  get: function get() {\n    return _ssr.useIsSSR;\n  }\n});\nObject.defineProperty(exports, \"useLayoutEffect\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.useLayoutEffect;\n  }\n});\nvar _reactNative = require(\"react-native\");\nvar _ariaToAccessibilityMap = require(\"./ariaToAccessibilityMap\");\nObject.keys(_ariaToAccessibilityMap).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _ariaToAccessibilityMap[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ariaToAccessibilityMap[key];\n    }\n  });\n});\nvar _utils = require(\"@react-aria/utils\");\nvar _ssr = require(\"@react-aria/ssr\");\nvar attachEventHandlersOnRef = function attachEventHandlersOnRef(props, ref) {\n  if (ref && ref.current) {\n    for (var key in props) {\n      if (key.startsWith('on')) {\n        ref.current[key.toLowerCase()] = props[key];\n      }\n    }\n  }\n};\nexports.attachEventHandlersOnRef = attachEventHandlersOnRef;\nvar getLabel = function getLabel(props) {\n  var _props$accessibilityL;\n  var label = (_props$accessibilityL = props.accessibilityLabel) !== null && _props$accessibilityL !== void 0 ? _props$accessibilityL : props['aria-label'];\n  if (!label) {\n    label = typeof props.label === 'string' ? props.label : undefined;\n  }\n  return label;\n};\nexports.getLabel = getLabel;\nvar isRTL = function isRTL() {\n  if (_reactNative.I18nManager.isRTL !== undefined) {\n    return _reactNative.I18nManager.isRTL;\n  }\n  if (_reactNative.I18nManager.getConstants) {\n    return _reactNative.I18nManager.getConstants().isRTL;\n  }\n};\nexports.isRTL = isRTL;","map":{"version":3,"names":["_reactNative","require","_ariaToAccessibilityMap","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_utils","_ssr","attachEventHandlersOnRef","props","ref","current","startsWith","toLowerCase","getLabel","_props$accessibilityL","label","accessibilityLabel","undefined","isRTL","I18nManager","getConstants"],"sources":["C:\\Users\\idriss.drame\\Projet\\ApmNews\\node_modules\\@react-native-aria\\utils\\lib\\module\\index.ts"],"sourcesContent":["import { I18nManager } from 'react-native';\n\nexport const attachEventHandlersOnRef = (props: any, ref: any) => {\n  if (ref && ref.current) {\n    for (let key in props) {\n      if (key.startsWith('on')) {\n        ref.current[key.toLowerCase()] = props[key];\n      }\n    }\n  }\n};\n\nexport const getLabel = (props: any) => {\n  let label = props.accessibilityLabel ?? props['aria-label'];\n\n  if (!label) {\n    label = typeof props.label === 'string' ? props.label : undefined;\n  }\n\n  return label;\n};\n\nexport * from './ariaToAccessibilityMap';\nexport {\n  useId,\n  useLayoutEffect,\n  mergeIds,\n  mergeProps,\n} from '@react-aria/utils';\nexport { SSRProvider, useIsSSR } from '@react-aria/ssr';\n\nexport const isRTL = () => {\n  // To support previous RN versions. Newer versions use below getConstants()\n  if (I18nManager.isRTL !== undefined) {\n    return I18nManager.isRTL;\n  }\n\n  // @ts-ignore - RN web only\n  if (I18nManager.getConstants) {\n    // @ts-ignore - RN web only\n    return I18nManager.getConstants().isRTL;\n  }\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAsBA,IAAAC,uBAAA,GAAAD,OAAA;AAAAE,MAAA,CAAAC,IAAA,CAAAF,uBAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,EAAAJ,GAAA;EAAA,IAAAA,GAAA,IAAAK,OAAA,IAAAA,OAAA,CAAAL,GAAA,MAAAJ,uBAAA,CAAAI,GAAA;EAAAH,MAAA,CAAAS,cAAA,CAAAD,OAAA,EAAAL,GAAA;IAAAO,UAAA;IAAAC,GAAA,WAAAA,IAAA;MAAA,OAAAZ,uBAAA,CAAAI,GAAA;IAAA;EAAA;AAAA;AACA,IAAAS,MAAA,GAAAd,OAAA;AAMA,IAAAe,IAAA,GAAAf,OAAA;AA3BO,IAAMgB,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAIC,KAAD,EAAaC,GAAb,EAA0B;EAChE,IAAIA,GAAG,IAAIA,GAAG,CAACC,OAAf,EAAwB;IACtB,KAAK,IAAId,GAAT,IAAgBY,KAAhB,EAAuB;MACrB,IAAIZ,GAAG,CAACe,UAAJ,CAAe,IAAf,CAAJ,EAA0B;QACxBF,GAAG,CAACC,OAAJ,CAAYd,GAAG,CAACgB,WAAJ,EAAZ,IAAiCJ,KAAK,CAACZ,GAAD,CAAtC;MACD;IACF;EACF;AACF,CARM;AAAAK,OAAA,CAAAM,wBAAA,GAAAA,wBAAA;AAUA,IAAMM,QAAQ,GAAI,SAAZA,QAAQA,CAAIL,KAAD,EAAgB;EAAA,IAAAM,qBAAA;EACtC,IAAIC,KAAK,IAAAD,qBAAA,GAAGN,KAAK,CAACQ,kBAAT,cAAAF,qBAAA,cAAAA,qBAAA,GAA+BN,KAAK,CAAC,YAAD,CAA7C;EAEA,IAAI,CAACO,KAAL,EAAY;IACVA,KAAK,GAAG,OAAOP,KAAK,CAACO,KAAb,KAAuB,QAAvB,GAAkCP,KAAK,CAACO,KAAxC,GAAgDE,SAAxD;EACD;EAED,OAAOF,KAAP;AACD,CARM;AAAAd,OAAA,CAAAY,QAAA,GAAAA,QAAA;AAmBA,IAAMK,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAEzB,IAAIC,wBAAW,CAACD,KAAZ,KAAsBD,SAA1B,EAAqC;IACnC,OAAOE,wBAAW,CAACD,KAAnB;EACD;EAGD,IAAIC,wBAAW,CAACC,YAAhB,EAA8B;IAE5B,OAAOD,wBAAW,CAACC,YAAZ,GAA2BF,KAAlC;EACD;AACF,CAXM;AAAAjB,OAAA,CAAAiB,KAAA,GAAAA,KAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
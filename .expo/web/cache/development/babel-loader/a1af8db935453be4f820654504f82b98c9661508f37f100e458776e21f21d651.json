{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\idriss.drame\\\\Projet\\\\ApmNews\\\\src\\\\components\\\\UnixDateToFormattedText.js\";\nfunction UnixDateToFormattedText(_ref) {\n  var unixDate = _ref.unixDate;\n  var date = new Date(unixDate * 1000);\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  var hours = date.getHours() + 2;\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds();\n  var formattedDate = day + \"/\" + month + \"/\" + year + \" \" + hours + \":\" + minutes + \":\" + seconds;\n  return (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n    style: styles.date,\n    children: [\"Publi\\xE9 \\xE0 \", formattedDate]\n  });\n}\nvar styles = _reactNative.StyleSheet.create({\n  date: {\n    fontWeight: \"bold\",\n    color: \"#808080\",\n    opacity: 0.6,\n    fontSize: 15\n  }\n});\nvar _default = UnixDateToFormattedText;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_jsxRuntime","_jsxFileName","UnixDateToFormattedText","_ref","unixDate","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedDate","jsxs","Text","style","styles","children","StyleSheet","create","fontWeight","color","opacity","fontSize","_default","exports","default"],"sources":["C:/Users/idriss.drame/Projet/ApmNews/src/components/UnixDateToFormattedText.js"],"sourcesContent":["import React from 'react';\r\nimport { Text } from 'react-native';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nfunction UnixDateToFormattedText({ unixDate }) {\r\n  // Créez une instance de la date avec le temps Unix en millisecondes\r\n  const date = new Date(unixDate * 1000);\r\n\r\n  // Utilisez les méthodes de l'objet Date pour extraire les composants de la date\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hours = date.getHours() + 2;\r\n  const minutes = date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n\r\n  // Formattez les composants de la date en une chaîne de caractères dans le format souhaité\r\n  const formattedDate = `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\r\n\r\n  // Renvoyer un composant Text contenant la date formatée\r\n  return (\r\n    <Text style={styles.date}>Publié à {formattedDate}</Text>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    \r\n  \r\n \r\n  \r\n    date:{\r\n        fontWeight: \"bold\",\r\n        color: \"#808080\",\r\n        opacity: 0.6,\r\n        fontSize: 15\r\n    },\r\n   \r\n})\r\n\r\nexport default UnixDateToFormattedText;"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAAoC,IAAAE,WAAA,GAAAF,OAAA;AAAA,IAAAG,YAAA;AAGpC,SAASC,uBAAuBA,CAAAC,IAAA,EAAe;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAEzC,IAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,GAAG,IAAI,CAAC;EAGtC,IAAMG,IAAI,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;EAC/B,IAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;EACjC,IAAMC,GAAG,GAAGN,IAAI,CAACO,OAAO,CAAC,CAAC;EAC1B,IAAMC,KAAK,GAAGR,IAAI,CAACS,QAAQ,CAAC,CAAC,GAAG,CAAC;EACjC,IAAMC,OAAO,GAAGV,IAAI,CAACW,UAAU,CAAC,CAAC;EACjC,IAAMC,OAAO,GAAGZ,IAAI,CAACa,UAAU,CAAC,CAAC;EAGjC,IAAMC,aAAa,GAAMR,GAAG,SAAIF,KAAK,SAAIF,IAAI,SAAIM,KAAK,SAAIE,OAAO,SAAIE,OAAS;EAG9E,OACE,IAAAjB,WAAA,CAAAoB,IAAA,EAACrB,YAAA,CAAAsB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAAClB,IAAK;IAAAmB,QAAA,GAAC,iBAAS,EAACL,aAAa;EAAA,CAAO,CAAC;AAE7D;AAGA,IAAMI,MAAM,GAAGE,uBAAU,CAACC,MAAM,CAAC;EAK7BrB,IAAI,EAAC;IACDsB,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE,GAAG;IACZC,QAAQ,EAAE;EACd;AAEJ,CAAC,CAAC;AAAA,IAAAC,QAAA,GAEa7B,uBAAuB;AAAA8B,OAAA,CAAAC,OAAA,GAAAF,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
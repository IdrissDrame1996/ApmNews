{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useMenuTriggerState = $a28c903ee9ad8dc5$export$79fefeb1c2091ac3;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _overlays = require(\"@react-stately/overlays\");\nvar _react = require(\"react\");\nfunction $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {\n  var overlayTriggerState = (0, _overlays.useOverlayTriggerState)(props);\n  var _ref = (0, _react.useState)(null),\n    _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n    focusStrategy = _ref2[0],\n    setFocusStrategy = _ref2[1];\n  return Object.assign({\n    focusStrategy: focusStrategy\n  }, overlayTriggerState, {\n    open: function open() {\n      var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle: function toggle() {\n      var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  });\n}","map":{"version":3,"names":["$a28c903ee9ad8dc5$export$79fefeb1c2091ac3","props","overlayTriggerState","$9Xvoh$useOverlayTriggerState","_ref","$9Xvoh$useState","_ref2","_slicedToArray2","default","focusStrategy","setFocusStrategy","Object","assign","open","arguments","length","undefined","toggle"],"sources":["C:\\Users\\idriss.drame\\Projet\\ApmNews\\node_modules\\@react-stately\\menu\\dist\\packages\\@react-stately\\menu\\src\\index.ts","C:\\Users\\idriss.drame\\Projet\\ApmNews\\node_modules\\@react-stately\\menu\\dist\\packages\\@react-stately\\menu\\src\\useMenuTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useMenuTriggerState} from './useMenuTriggerState';\n\nexport type {MenuTriggerProps} from '@react-types/menu';\nexport type {MenuTriggerState} from './useMenuTriggerState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): MenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  };\n}\n"],"mappings":";;;;;;;;ACgCO,SAASA,0CAAoBC,KAAuB,EAAqB;EAC9E,IAAIC,mBAAA,GAAsB,IAAAC,gCAAqB,EAAEF,KAAA;EACjD,IAAAG,IAAA,GAAwC,IAAAC,eAAO,EAAiB,IAAI;IAAAC,KAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,IAAA;IAA/DK,aAAA,GAAAH,KAAA;IAAeI,gBAAA,GAAAJ,KAAA;EAEpB,OAAAK,MAAA,CAAAC,MAAA;mBACEH;EAAA,GACGP,mBAAmB;IACtBW,IAAA,WAAAA,KAAA,EAA0C;MAAA,IAArCJ,aAAA,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA+B,IAAI;MACtCJ,gBAAA,CAAiBD,aAAA;MACjBP,mBAAA,CAAoBW,IAAI;IAC1B;IACAI,MAAA,WAAAA,OAAA,EAA4C;MAAA,IAArCR,aAAA,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA+B,IAAI;MACxCJ,gBAAA,CAAiBD,aAAA;MACjBP,mBAAA,CAAoBe,MAAM;IAC5B;EAAA;AAEJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}